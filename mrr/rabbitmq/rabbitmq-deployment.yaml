apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yml
    kompose.version: 1.21.0 (992df58d8)
  creationTimestamp: null
  labels:
    io.kompose.service: rabbitmq
  name: rabbitmq
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: rabbitmq
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml
        kompose.version: 1.21.0 (992df58d8)
      creationTimestamp: null
      labels:
        io.kompose.network/mrr.net: "true"
        io.kompose.service: rabbitmq
    spec:
      containers:
        - env:
            - name: RABBITMQ_DEFAULT_PASS
              value: rabbitmq
            - name: RABBITMQ_DEFAULT_USER
              value: rabbitmq
            - name: RABBITMQ_DEFAULT_VHOST
              value: /
            - name: RABBITMQ_ERLANG_COOKIE
              value: SWQOKODSQALRPCLNMEQG
          image: rabbitmq:3-management
          imagePullPolicy: IfNotPresent
          name: rabbitmq
          ports:
            - containerPort: 15672
            - containerPort: 5672
          resources: {}
          volumeMounts:
            - mountPath: /var/lib/rabbitmq/mnesia/rabbit@rabbitmq
              name: rabbitmq-data-pv-claim
      hostname: rabbitmq
      restartPolicy: Always
      serviceAccountName: ""
      volumes:
        - name: rabbitmq-data-pv-claim
          persistentVolumeClaim:
            claimName: rabbitmq-data-pv-claim
      nodeSelector:
        kubernetes.io/hostname: pop-os
status: {}

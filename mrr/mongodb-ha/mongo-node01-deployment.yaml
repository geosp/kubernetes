apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    io.kompose.service: mongo-node01
  name: mongo-node01
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: mongo-node01
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml
        kompose.version: 1.21.0 (992df58d8)
      creationTimestamp: null
      labels:
        io.kompose.network/mrr.net: "true"
        io.kompose.service: mongo-node01
    spec:
      containers:
        - command:
            - /usr/bin/mongod
            - "-f"
            - /etc/mongod.conf
            # - tail
            # - 'f'
            # - /dev/null
          image: mongo:4.2.6
          imagePullPolicy: IfNotPresent
          name: mongo-node01
          ports:
            - containerPort: 27017
          volumeMounts:
            - mountPath: /etc/mongod.conf
              name: mongo-config-pv-claim
              subPath: mongod.conf
              readOnly: false
            - mountPath: /data/db
              name: mongo-node01-data-pv-claim
              readOnly: false
          resources: {}
      hostname: mongo-node01
      restartPolicy: Always
      serviceAccountName: ""
      nodeSelector:
        kubernetes.io/hostname: ubuntu01
      volumes:
        - name: mongo-config-pv-claim
          persistentVolumeClaim:
            claimName: mongo-config-pv-claim
        - name: mongo-node01-data-pv-claim
          persistentVolumeClaim:
            claimName: mongo-node01-data-pv-claim
status: {}
